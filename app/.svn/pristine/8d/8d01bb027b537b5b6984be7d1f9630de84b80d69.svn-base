package app.entity.content;

import lombok.Data;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import javax.persistence.*;
import java.io.Serializable;

/**
 * 评论表
 *
 * @author gongmingbo
 */
@Entity
@Table(name = "app_comment")
public class Comment implements Serializable {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    @ManyToOne
    @JoinColumn(name = "resourceId", nullable = false, referencedColumnName = "resourcesId")
    @Cascade({org.hibernate.annotations.CascadeType.MERGE, org.hibernate.annotations.CascadeType.PERSIST})
    private BaseContent resource;
    private Integer parentId;
    private String remark;
    private String commentContent;
    private String commentTime;
    private String commentUserId;
    public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public BaseContent getResource() {
		return resource;
	}
	public void setResource(BaseContent resource) {
		this.resource = resource;
	}
	public Integer getParentId() {
		return parentId;
	}
	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}
	public String getRemark() {
		return remark;
	}
	public void setRemark(String remark) {
		this.remark = remark;
	}
	public String getCommentContent() {
		return commentContent;
	}
	public void setCommentContent(String commentContent) {
		this.commentContent = commentContent;
	}
	public String getCommentTime() {
		return commentTime;
	}
	public void setCommentTime(String commentTime) {
		this.commentTime = commentTime;
	}
	public String getCommentUserId() {
		return commentUserId;
	}
	public void setCommentUserId(String commentUserId) {
		this.commentUserId = commentUserId;
	}
	@Override
	public String toString() {
		return "Comment [id=" + id + ", resource=" + resource + ", parentId=" + parentId + ", remark=" + remark
				+ ", commentContent=" + commentContent + ", commentTime=" + commentTime + ", commentUserId="
				+ commentUserId + "]";
	}
	    
}
